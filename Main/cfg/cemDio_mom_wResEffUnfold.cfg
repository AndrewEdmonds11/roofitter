#include "Main/cfg/obs_mom.cfg"
#include "Main/cfg/cuts_cd3.cfg"
#include "Main/cfg/cem.cfg"
#include "Main/cfg/dio.cfg"

// resolution and efficiency
string cemDio_mom_wResEffUnfold.mom.res.name = "dscb_tq08";
string cemDio_mom_wResEffUnfold.mom.eff.name = "erf_tq08";

bool cemDio_mom_wResEffUnfold.unfold = true;

vector<string> cemDio_mom_wResEffUnfold.observables = {"mom"};
vector<string> cemDio_mom_wResEffUnfold.cuts = {"goodfit", "triggered", "inTimeWindow", "inTanDipCut", "inD0Cut", "inMaxRCut", "noCRVHit", "passTrkQual", "recomom"};
vector<string> cemDio_mom_wResEffUnfold.components = {"cemLL", "dioPol58"};

string cemDio_mom_wResEffUnfold.model = "SUM::model(NCe[0, 200]*cemLLEffRes, NDio[0,20000]*dioPol58EffRes)";

vector<string> cemDio_mom_wResEffUnfold.calculations = { "f_cap[0.609]",
						   "f_dio_above_95[3.9e-11]",
						   "EXPR::NDioTotal('NDioEff / (f_dio_above_95*(1-dioPol58FracSmeared))', NDioEff, f_dio_above_95, dioPol58FracSmeared)",
						   "EXPR::NCap('(f_cap/(1-f_cap))*NDioTotal', f_cap, NDioTotal)",
						   "EXPR::Rmue('NCeEff / NCap', NCeEff, NCap)",
						   "Poisson::poisCe(NCe, muCe[0, 200])"};

//
// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
